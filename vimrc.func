" Mapping
nmap <leader>ud :call CurrentLineUpdate("LastUpdate")<cr>

" 更新光标下当前行的 `LastUpdate` "{{{
function! CurrentLineUpdate(varname)
    " 获取当前光标下当前行的内容
    " LastUpdate : 2016-09-17
    let l:str_lastupdate = getline('.')
    if l:str_lastupdate =~ a:varname.'\v\s*:\s*(\d{4}-\d{2}-\d{2})'
        echo 'Change datetime to :'.strftime("%Y-%m-%d")
        call setline('.', substitute(l:str_lastupdate, 
                    \ a:varname.'\v\s*:\s*\d{4}-\d{2}-\d{2}\s+.*$',
                    \ a:varname." : ".strftime("%Y-%m-%d %T")
                    \ ,''))
    else 
        echo "This line contain not date" 
    endif
    " TODO 此处我决定上python
endfunction
" call CurrentLineUpdate('LastUpdate')
" "}}}

" function! RunmeCmd() "{{{
function! RunmeCmd()
    let s:text = getline('.')
    if strlen('s:text')!=0
        exec ":! " . s:text
    else
        echo "no find"
    endif
endfunction

function! RunmeCmdRead()
    let s:text = getline('.')
    if strlen('s:text')!=0
        " 上行中的 . 为连接符号，连接前面的字符串和后面的字符变量
        exec ":r ! " . s:text
    else
        echo "no find"
    endif
endfunction
    
" 将当前行作为命令行在shell/cmd中执行
    " map <F4> :call RunmeCmd()<CR>
" 将当前行作为命令行在shell/cmd中执行，并写入当前行中
    " map <S-F4> :call RunmeCmdRead()<CR>
"}}}

" FUNCTION : CompleteMonths  用户自定义自动补全 : >"{{{
if !exists('g:user_complete_option')
    let g:user_complete_option = ['hexo']
endif
    
" :h complete-functions
function! CompleteMonths(findstart, base)
    if a:findstart
        " 定位单词的开始处
        let line = getline('.')
        let start = col('.') - 1
        " \a 英文字符字符
        while start > 0 && ( line[start - 1] =~ '\a' 
                    \ || line[start - 1 ] =~ '/' )
            let start -= 1
        endwhile
        " 返回start,即a:base的取值区间
        return start
    else
        " 寻找匹配 "a:base" 的月份
        let res = []
        call complete_add(a:base)
        " hexo section
        if count(g:user_complete_option, 'hexo')
            let image_lists =  globpath(g:hexo_blogpath. 
                        \ g:os_sep.'source', a:base.'*')
            for m in split(image_lists)
                " 对于路径补全，fnamemodify无法包含路径符号前面的文件夹名字
                let completestr = RelpathPython(join([g:hexo_blogpath, 'source'],
                            \ g:os_sep), m)
                " call complete_add(join(['.', completestr], g:os_sep))
                " if a:base[0] == '/' 
                    call complete_add((a:base[0]=='/' ? '/' : '') . completestr)
            endfor
            if complete_check()
                break
            endif
        endif

        return []
    endif
endfunction
" 启用自定义补全，感觉和ycm冲突了
" set completefunc=CompleteMonths

" function embeded python script
function! RelpathPython(rpath, abspath)

let l:abspath = fnamemodify(a:abspath, ":p")
let l:rpath = fnamemodify(a:rpath, ":p")

python <<EOF
import os,vim
pyrelpath = os.path.relpath(vim.eval("l:abspath"), vim.eval("l:rpath"))
EOF

return pyeval("pyrelpath")
endfunction

"}}}
